---
title: "Lab 4"
author: "Hanin Almodaweb"
format: html
theme: journal
embed-resources: true
fig-width: 6
fig-height: 4
---

```{r setup, message=FALSE, echo=FALSE, warning=FALSE}
#install.packages(c("data.table","leaflet"))
library(data.table)
library(leaflet)
library(tidyverse)
```

### 1. Read in the data

```{r}
if (!file.exists("met_all.gz"))
  download.file(
    url = "https://raw.githubusercontent.com/USCbiostats/data-science-data/master/02_met/met_all.gz",
    destfile = "met_all.gz",
    method   = "libcurl",
    timeout  = 60
    )
met <- data.table::fread("met_all.gz")
```

### 2. Prepare the data
-   Remove temperatures less than -17C
-   Make sure there are no missing data in the key variables coded as 9999, 999, etc
-   Generate a date variable using the functions `as.Date()` (hint: You will need the following to create a date `paste(year, month, day, sep = "-")`).
-   Using the `data.table::week` function, keep the observations of the first week of the month.
-   Compute the mean by station of the variables `temp`, `rh`, `wind.sp`, `vis.dist`, `dew.point`, `lat`, `lon`, and `elev`.
-   Create a region variable for NW, SW, NE, SE based on lon = -98.00 and lat = 39.71 degrees
-   Create a categorical variable for elevation as in the lecture slides

```{r}
# Removing temperatures less than -17C
met <- met[temp > -17]

# Replacing missing data coded as 9999, 999, etc.
met <- met[elev == 9999.0, elev := NA]

# Generating date variable for week
met[, week := week(as.Date(paste(year, month, day, sep = "-")))]

# Keeping only the data from the first week of the month
met <- met[week == min(week, na.rm = TRUE)]

# Computing means by station in table met_avg
met_avg <- met[,.(temp=mean(temp,na.rm=TRUE), rh=mean(rh,na.rm=TRUE), wind.sp=mean(wind.sp,na.rm=TRUE), 
                vis.dist=mean(vis.dist,na.rm=TRUE), dew.point = mean(dew.point, na.rm=TRUE), lat=mean(lat), lon=mean(lon), 
                elev=mean(elev,na.rm=TRUE)), by="USAFID"]

# Creating categorical variable for elevation
met_avg$elev_cat <- ifelse(met_avg$elev> 252, "high", "low")

# Creating a region variable by categorizing data based on latitude and longitude
met_avg$region <- ifelse(met_avg$lon > -98 & met_avg$lat >39.71, "north east",
                         ifelse(met_avg$lon > -98 & met_avg$lat < 39.71, "south east",
                                ifelse(met_avg$lon < -98 & met_avg$lat >39.71, "north west", "south west")))

table(met_avg$region)
```

### 3. Use `geom_violin` to examine the wind speed and dew point by region

You saw how to use `geom_boxplot` in class. Try using `geom_violin` instead (take a look at the help).
(hint: You will need to set the `x` aesthetic to 1)

- Use facets
- Make sure to deal with `NA`s
- Describe what you observe in the graph

```{r}
# Geom_violin for wind speed
met_avg |>
  filter(!(region %in% NA)) |>
ggplot()+
  geom_violin(mapping = aes(y=wind.sp, x=1)) +
  labs(title = "Wind Speed Distribution by Region", y = "Wind Speed (m/s)", x = "") +
  facet_wrap(~region, nrow=2)

# Geom_violin for dew point
met_avg |>
  filter(!(region %in% NA)) |>
ggplot()+
  geom_violin(mapping = aes(y=dew.point, x=1)) +
  labs(title = "Dew Point Distribution by Region", y = "Dew Point (°C)", x = "") +
  facet_wrap(~region, nrow=2)

# Boxplot for dew point comparison
met_avg |>
  filter(!(region %in% NA)) |>
ggplot()+
  geom_boxplot(mapping = aes(y=dew.point, fill=region)) +
  labs(title = "Dew Point Distribution by Region", y = "Dew Point (°C)", x = "") +
  facet_wrap(~region, nrow=2)
```

In the wind speed graph, the south west region displays a relatively normal distribution, with slightly higher average wind speeds seen in both the north west and south west compared to the eastern regions. The highest density of wind speeds in the south west is around 3 m/s, while in the south east, it's about 1.5 m/s. Notably, the north east region shows an extreme outlier, with a wind speed of approximately 12 m/s.

The dew point graphs contain irregular distributions. The eastern regions, both north and south, have tighter ranges, with high densities around 16°C in the north east and 21°C in the south east. In contrast, the western regions have much wider distributions of data points. The average dew point is about 13°C in the south west and 9°C in the north west, but these averages are skewed downward by several very dew points that extend below 0°C.

### 4. Use `geom_jitter` with `stat_smooth` to examine the association between dew point and wind speed by region
-   Color points by region
-   Make sure to deal with `NA`s
-   Fit a linear regression line by region
-   Describe what you observe in the graph

```{r}
met_avg |>
filter(!(region %in% NA)) |>
  ggplot(mapping = aes(x=dew.point, y=wind.sp, color=region))+
  geom_jitter() + 
  labs(title = "Association Between Dew Point and Wind Speed by Region",
       x = "Dew Point (°C)", y = "Wind Speed (m/s)") +
  stat_smooth(method=lm)
```

The plot shows a noticeable clustering of wind speeds and dew points across regions. In the south west, there seems to be little to no relationship between wind speed and dew point, as indicated by the nearly flat regression line, suggesting that wind speeds stay around 3 m/s regardless of dew point. Both the north east and south east show a slight positive correlation between dew point and wind speed, with higher dew points associated with somewhat higher wind speeds, particularly in the eastern regions. There is also a noticable outlier in the north east, where an exceptionally high wind speed occurs at a relatively low dew point. In contrast, the north west also shows a positive correlation, but with a wider range of dew points compared to the eastern regions.

### 5. Use `geom_bar` to create barplots of the weather stations by elevation category colored by region
-   Bars by elevation category using `position="dodge"`
-   Change colors from the default. Color by region using `scale_fill_brewer` see [this](http://rstudio-pubs-static.s3.amazonaws.com/5312_98fc1aba2d5740dd849a5ab797cc2c8d.html)
-   Create nice labels on the axes and add a title
-   Describe what you observe in the graph
-   Make sure to deal with `NA` values

```{r}
met_avg |>
filter(!(region %in% NA)) |>
  ggplot()+
  geom_bar(mapping=aes(x=elev_cat, fill=region), position = "dodge")+
  scale_fill_brewer(palette = "Purples")+
  labs(title="Number of Weather Stations by Elevation Category and Region", x="Elevation Category", y= "Count of Weather Stations")+
  theme_bw()
```

The north east region has a relatively equal distribution of weather stations between low and high elevations. In contrast, the north west region has significantly fewer weather stations compared to other regions and most stations in this region are located at higher altitudes. The south east region has more than three times as many weather stations at low altitudes compared to high altitudes and holds the largest number of stations among all four regions. Finally, the south west region has more than twice the number of weather stations at high altitudes than at low altitudes.

### 6. Use `stat_summary` to examine mean dew point and wind speed by region with standard deviation error bars
-   Make sure to remove `NA`s
-   Use `fun.data="mean_sdl"` in `stat_summary`
-   Add another layer of `stats_summary` but change the geom to `"errorbar"` (see the help).
-   Describe the graph and what you observe

```{r}
met_avg |>
filter(!(region %in% NA)) |>
  ggplot(mapping=aes(x = region, y = dew.point, color = region))+
  stat_summary(fun.data = "mean_sdl", geom = "pointrange", fun.args = list(mult = 1)) +  
  stat_summary(fun.data = "mean_sdl", geom = "errorbar", fun.args = list(mult = 1), width = 0.2) +
  labs(title = "Mean Dew Point by Region with Standard Deviation",
       x = "Region", y = "Dew Point (°C)")

met_avg |>
filter(!(region %in% NA)) |>
  ggplot(mapping=aes(x=region, y=wind.sp, color = region)) +
  stat_summary(fun.data = "mean_sdl", geom = "pointrange", fun.args = list(mult = 1)) + 
  stat_summary(fun.data = "mean_sdl", geom = "errorbar", fun.args = list(mult = 1), width = 0.2) +
  labs(title = "Mean Wind Speed by Region with Standard Deviation",
       x = "Region", y = "Wind Speed (m/s)")
```

Dew point shows greater variability and tends to be lower on average in the western regions compared to the eastern regions. In the east, dew point is more consistent, with higher averages in the south east compared to the north east. 

Wind speed fluctuates across the country, with the western regions generally having slightly higher average wind speeds than the eastern regions. The variability indicated by the standard error bars is relatively consistent across all regions, suggesting a similar degree of uncertainty or variation in the estimates for each region.

### 7. Make a map showing the spatial trend in relative humidity in the US
-   Make sure to remove `NA`s
-   Use leaflet()
-   Make a color palette with custom colors
-   Use `addMarkers` to include the top 10 places in relative humidity (hint: this will be useful `rank(-rh) <= 10`)
-   Add a legend
-   Describe the trend in RH across the US

```{r}
met_avg2 <- met_avg[!is.na(rh)]

#Rank and filter the top 10 places by relative humidity
top10 <- met_avg2[rank(-rh) <= 10]

# Create a color palette based on relative humidity (rh)
rh_pal = colorNumeric(c('pink','salmon','magenta'), domain=met_avg2$rh)

leaflet(met_avg2) |>
  addProviderTiles('OpenStreetMap') |>
  addCircles(lat=~lat, lng=~lon, color=~rh_pal(rh), label=~paste0(round(rh,2), ' rh'), opacity=1,fillOpacity=1, radius=500) |>
  addMarkers(lat=~lat, lng=~lon, label=~paste0(round(rh,2), ' rh'), data = top10) |>
  addLegend('bottomleft',pal=rh_pal, values=met_avg2$rh, title="Relative Humidity", opacity=1)
```

The trend in relative humidity increases from west to east, with the exception of coastal areas in the west. The Midwest, South, Northeast, and the western coastline generally experience the highest relative humidity levels. In contrast, the Sun Belt has the lowest humidity, while the Rocky Mountain region sees moderate levels. Notably, six of the top ten locations for highest relative humidity are near the western coastline and in Florida.

### 8. Use a ggplot extension
-   Pick an extension (except cowplot) from [here](https://exts.ggplot2.tidyverse.org/gallery/) and make a plot of your choice using the met data (or met_avg)
-   Might want to try examples that come with the extension first (e.g. ggtech, gganimate, ggforce)

```{r}
# ggforce plot
options(repos = c(CRAN = "https://cloud.r-project.org/"))  
install.packages("ggforce") 

library(ggforce)

met_avg %>%
  filter(!(region %in% NA)) %>%
  ggplot() +
  geom_point(mapping = aes(x = temp, y = rh, color = region)) +
  facet_zoom(x = region == "south east") +
  ggtitle("Temperature vs Relative Humidity by Region") +  
  xlab("Temperature (°C)") +  
  ylab("Relative Humidity (%)") 
```

