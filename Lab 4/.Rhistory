install.packages(quarto)
install.packages("quarto")
install.packages("rmarkdown")
install.packages("datasauRus")
getwd
getwd()
library(datasauRus)
install.packages(datasauRus)
install.packages("datasauRus")
table(datasaurus_dozen$dataset)
install.packages("datasauRus")
table(datasaurus_dozen$dataset)
```{r, eval=FALSE}
table(datasaurus_dozen$dataset)
table(datasaurus_dozen$dataset)
install.packages("datasauRus")
datasauRus::datasaurus_dozen
datasaurus_dozen
view(datasaurus_dozen)
?datasaurus_dozen
nrow(datasaurus_dozen)
library(datasauRus)
nrow(datasaurus_dozen)
table(datasaurus_dozen$dataset)
ncol(datasaurus_dozen)
?str
?spec
str(datasaurus_dozen)
glimpse(datasaurus_dozen)
glimpse(datasaurus_dozen)
table(datasaurus_dozen$dataset)
dino_data <- datasaurus_dozen[datasaurus_dozen$dataset == 'dino', ]
View(dino_data)
plot(dino_data$x, dino_data$y)
ggplot(data = dino_data, mapping = aes(x = x, y = y)) +
geom_point()
install.packages("ggplot")
ggplot(data = dino_data, mapping = aes(x = x, y = y)) +
geom_point()
install.packages("ggplot2")
library(ggplot2)
ggplot(data = dino_data, mapping = aes(x = x, y = y)) +
geom_point()
cor(dino_data$x, dino_data$y)
star_data <- datasaurus_dozen[datasaurus_dozen$dataset == 'star', ]
plot(star_data$x, star_data$y)
datasaurus_dozen
?data.frame
View(datasaurus_dozen)
table(datasaurus_dozen$dataset)
cor(star_data$x, star_data$y)
circle_data <- datasaurus_dozen[datasaurus_dozen$dataset == 'circle', ]
plot(circle_data$x, circle_data$y)
cor(circle_data$x, circle_data$y)
layout(matrix(1:16, nrow=4, ncol=4))
for(name in unique(datasaurus_dozen$dataset)){
subset <- datasaurus_dozen[datasaurus_dozen$dataset == name, ]
plot(subset$x, subset$y, main = name)
}
layout(matrix(1:16, nrow=4, ncol=4))
for(name in unique(datasaurus_dozen$dataset)){
subset <- datasaurus_dozen[datasaurus_dozen$dataset == name, ]
plot(subset$x, subset$y, main = name)
}
layout(matrix(1:16, nrow=4, ncol=4))
for(name in unique(datasaurus_dozen$dataset)){
subset <- datasaurus_dozen[datasaurus_dozen$dataset == name, ]
plot(subset$x, subset$y, main = name)
}
layout(matrix(1:16, nrow=4, ncol=4))
for(name in unique(datasaurus_dozen$dataset)){
subset <- datasaurus_dozen[datasaurus_dozen$dataset == name, ]
plot(subset$x, subset$y, main = name)
}
layout(matrix(1:16, nrow=4, ncol=4))
for(name in unique(datasaurus_dozen$dataset)){
subset <- datasaurus_dozen[datasaurus_dozen$dataset == name, ]
plot(subset$x, subset$y, main = name)
}
layout(matrix(1:16, nrow=4, ncol=4))
for(name in unique(datasaurus_dozen$dataset)){
subset <- datasaurus_dozen[datasaurus_dozen$dataset == name, ]
plot(subset$x, subset$y, main = name)
}
cor(dino_data$x, dino_data$y)
cor(dino_data$x, dino_data$y)
# dino_data |>
#   summarize(r = cor(x, y))
ggplot(datasaurus_dozen, aes(x = x, y = y, color = dataset))+
#   geom_point()+
#   facet_wrap(~ dataset, ncol = 3) +
#   theme(legend.position = "none")
layout(matrix(1:16, nrow=4, ncol=4))
layout(matrix(1:16, nrow=4, ncol=4))
for(name in unique(datasaurus_dozen$dataset)){
subset <- datasaurus_dozen[datasaurus_dozen$dataset == name, ]
plot(subset$x, subset$y, main = name)
}
sapply(unique(datasaurus_dozen$dataset), function(name){
subset <- datasaurus_dozen[datasaurus_dozen$dataset == name, ]
return(cor(subset$x, subset$y))
})
R.version
# knitr::include_graphics("../../static/assignment-img/rstudio-anatomy.png")
library(datasauRus)
library(datasauRus)
nrow(datasaurus_dozen)
ncol(datasaurus_dozen)
str(datasaurus_dozen)
dino_data <- datasaurus_dozen[datasaurus_dozen$dataset == 'dino', ]
cor(dino_data$x, dino_data$y)
# dino_data |>
#   summarize(r = cor(x, y))
?penguin
library(penguin)
library(penguins)
?penguins
view(palmerpenguins::penguins)
install.packages("palmerpenguins")
view(palmerpenguins::penguins)
met <- read.table(file.path('met_all.gz'),
header = TRUE, sep = ',
met <- read.table(file.path('met_all.gz'),
met <- read.table(file.path('met_all.gz'),
header = TRUE, sep = ','|)
met <- read.table(file.path('met_all.gz'),
header = TRUE, sep = ',')
install.packages("data.table")
install.packages("leaflet")
install.packages("tidyverse")
library(data.table)
library(leaflet)
library(tidyverse)
library(data.table)
library(leaflet)
library(tidyverse)
met <- data.table::fread(file.path("~", "Downloads", "met_all.gz"))
fn <- "https://raw.githubusercontent.com/USCbiostats/data-science-data/master/02_met/met_all.gz"
if (!file.exists("met_all.gz"))
download.file(fn, destfile = "met_all.gz")
met <- data.table::fread("met_all.gz")
install.packages("R.utils")
fn <- "https://raw.githubusercontent.com/USCbiostats/data-science-data/master/02_met/met_all.gz"
if (!file.exists("met_all.gz"))
download.file(fn, destfile = "met_all.gz")
met <- data.table::fread("met_all.gz")
met <- as.data.frame(met)
download.file(
"https://raw.githubusercontent.com/USCbiostats/data-science-data/master/02_met/met_all.gz",
destfile = file.path("~", "Downloads", "met_all.gz"),
method   = "libcurl",
timeout  = 60
)
met <- data.table::fread(file.path("~", "Downloads", "met_all.gz"))
met <- as.data.frame(met)
dim(met)
head(met)
tail(met)
View(met)
met <- data.table::fread(file.path("~", "Downloads", "met_all.gz"))
met <- as.data.frame(met)
str(met)
table(met$year)
table(met$day)
table(met$hour)
summary(met$temp)
summary(met$elev)
summary(met$wind.sp)
met[met$elev==9999.0, ] <- NA
summary(met$elev)
met <- met[met$temp > -40, ]
head(met[order(met$temp), ])
summary(met$wind.sp)
#install.packages(c("data.table","leaflet"))
library(data.table)
library(leaflet)
library(tidyverse)
met <- data.table::fread(file.path("~", "Downloads", "met_all.gz"))
met <- as.data.frame(met)
dim(met)
head(met)
tail(met)
str(met)
table(met$year)
table(met$day)
table(met$hour)
summary(met$temp)
summary(met$elev)
summary(met$wind.sp)
met[met$elev==9999.0, ] <- NA
summary(met$elev)
met <- met[met$temp > -40, ]
head(met[order(met$temp), ])
summary(met$temp[met$lat == 38.767 & met$lon == -104.3])
elev <- met[which(met$elev == max(met$elev, na.rm = TRUE)), ]
summary(elev)
cor(elev$temp, elev$wind.sp, use="complete")
hist(met$elev,)
hist(met$temp,)
hist(met$wind.sp,)
leaflet(elev) %>%
addProviderTiles('OpenStreetMap') %>%
addCircles(lat=~lat,lng=~lon, opacity=1, fillOpacity=1, radius=100)
library(lubridate)
elev$date <- with(elev, ymd_h(paste(year, month, day, hour, sep= ' ')))
summary(elev$date)
elev <- elev[order(elev$date), ]
head(elev)
plot(elev$date, elev$temp, type = "l", cex = 0.5)
plot(elev$date, elev$wind.sp, type = "l", cex = 0.5)
plot <- elev %>%
ggplot(aes(
x = date,
y = temp
))+
geom_line()
print(plot)
plot2 <- elev %>%
ggplot(aes(
x = date,
y = wind.sp
)) +
geom_line()
print(plot2)
dim(met)
nrow(met)
ncol(met)
library(leaflet)
leaflet(elev) %>%
addProviderTiles('OpenStreetMap') %>%
addCircles(lat=~lat,lng=~lon, opacity=1, fillOpacity=1, radius=100)
options(repos = c(CRAN = "https://cran.rstudio.com/"))
install.packages(c("data.table","leaflet"))
install.packages("ggpattern")
