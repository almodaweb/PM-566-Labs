---
title: "Lab 3"
author: "Hanin Almodaweb"
format: html
embed-resources: true
---

# 1. Read in the data

```{r}
met <- data.table::fread(file.path("~", "Downloads", "met_all.gz"))
met <- as.data.frame(met)
```

# 2. Check the dimensions, headers, footers.

### **How many columns, rows are there?**

```{r}
dim(met)
nrow(met)
ncol(met)

head(met)
tail(met)
```
There are 30 columns and 2,377,307 rows.

# 3. Take a look at the variables.

### **Show the type (class) of each variable (hint: try the `str` function).**
```{r}
str(met)
```

### **What are the names of the key variables related to our question of interest?**
The key variables are **elev** (elevation), **wind.sp** (wind speed), **temp** (temperature), and the time-related variables (**year**, **day**, **hour**) to analyze patterns over time at the highest elevation station.

# 4. Take a closer look at the key variables. 

```{r}
table(met$year)
table(met$day)
table(met$hour)
summary(met$temp)
summary(met$elev)
summary(met$wind.sp)
```

Replace elevations with 9999 as `NA`.

```{r}
met[met$elev==9999.0, ] <- NA
summary(met$elev)
```

### **At what elevation is the highest weather station?**
The highest weather station is at an elevation of 4,113 meters.

We also have the issue of the minimum temperature being -40C, which seems implausible, so we should remove those observations.

```{r}
met <- met[met$temp > -40, ]
head(met[order(met$temp), ])
```

### **How many missing values are there in the `wind.sp` variable?**
```{r}
summary(met$wind.sp)
```
There are 91,853 missing values for the wind.sp variable.

# 5. Check the data against an external data source.

### **Where was the location for the coldest temperature readings (-17.2C)? Do these seem reasonable in context?**
The coordinates for the -17.2°C reading point to a location outside Colorado Springs, Colorado. Given that this data was collected in August, such a low temperature doesn't make sense in this context and is likely erroneous.

### **Does the range of values for elevation make sense? Why or why not?**
Given that Colorado Springs has an elevation of approximately 1,840m, the range of elevations make sense (-13m to 4113m).

# 6. Calculate summary statistics

We want to pick out the weather station with maximum elevation and examine its wind speed and temperature.

```{r}
elev <- met[which(met$elev == max(met$elev, na.rm = TRUE)), ]
summary(elev)
```

Some ideas: select the weather station with maximum elevation; look at the correlation between temperature and wind speed; look at the correlation between temperature and wind speed with hour and day of the month.

```{r}
cor(elev$temp, elev$wind.sp, use="complete")
cor(elev$temp, elev$hour, use="complete")
cor(elev$wind.sp, elev$day, use="complete")
cor(elev$wind.sp, elev$hour, use="complete")
cor(elev$temp, elev$day, use="complete")
```

# 7. Exploratory graphs

### **Use the `hist` function to make histograms of the elevation, temperature, and wind speed variables for the whole dataset**
```{r}
hist(met$elev,)
hist(met$temp,)
hist(met$wind.sp,)
```

One thing we should consider for later analyses is to log transform wind speed and elevation as they are very skewed.

Look at where the weather station with highest elevation is located.

```{r}
leaflet(elev) %>%
  addProviderTiles('OpenStreetMap') %>% 
  addCircles(lat=~lat,lng=~lon, opacity=1, fillOpacity=1, radius=100)
```

Look at the time series of temperature and wind speed at this location. For this we will need to create a date-time variable for the x-axis.

```{r}
library(lubridate)
elev$date <- with(elev, ymd_h(paste(year, month, day, hour, sep= ' ')))
summary(elev$date)
elev <- elev[order(elev$date), ]
head(elev)
```

With the date-time variable we can plot the time series of temperature and wind speed.

### **Use the `plot` function to make line graphs of temperature vs. date and wind speed vs. date** 
#### Temperature vs. Date
```{r}
plot <- elev %>%
  ggplot(aes(
    x = date,
    y = temp
  ))+
  geom_line()
print(plot)
```
#### Wind speed vs. Date
```{r}
plot2 <- elev %>%
  ggplot(aes(
    x = date,
    y = wind.sp
  )) +
  geom_line()
print(plot2)
```

### **Summarize any trends that you see in these time series plots.**
The wind speed plot shows regular fluctuations throughout August, with peaks exceeding 15 m/s around mid and late August. Wind speeds increase toward the latter part of the month with noticeable variability. The temperature plot similarly exhibits fluctuations, ranging between 3°C and 15°C. Temperatures peak in mid-August and gradually decrease towards the end, with occasional sharp changes. Overall, both wind speed and temperature demonstrate significant variability over short periods, indicating dynamic weather conditions throughout the month.

# 8. Ask questions

### **What questions do you have about the data?**


### For questions about variables in the dataset or relationships between them, try making some more exploratory plots. Do you see the patterns you would expect? 

